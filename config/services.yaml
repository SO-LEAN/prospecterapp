# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    knp_menu.renderer.twig.options:
        currentClass: 'active'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #controller
    App\Controller\ProspectController:
        tags: ['controller.service_arguments']
        calls:
            - [setFormFactory, ['@form.factory']]
            - [setTwig, ['@twig']]
            - [setRouter, ['@router']]
            - [setUseCases, ['@Solean\CleanProspecter\UseCase\UseCasesFacade']]
            - [setFormHandler, ['@App\Service\RequestHandler']]

    #Security
    App\Security\ProspecterAuthenticator:
        arguments:
            - '@Symfony\Component\Security\Csrf\CsrfTokenManagerInterface'
            - '@Symfony\Component\Form\FormFactoryInterface'
            - '@Symfony\Component\HttpFoundation\Session\SessionInterface'
            - '@Solean\CleanProspecter\UseCase\UseCasesFacade'
            - '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
            - 'login'
            - 'dashboard_display'
            - 'prospecter_provider'
    App\Security\ProspecterUserProvider:
        arguments: ['@Solean\CleanProspecter\UseCase\UseCasesFacade']
    #Menu
    App\Menu\MenuBuilder:
        arguments: ["@knp_menu.factory"]
        tags:
            - { name: 'knp_menu.menu_builder', method: 'createMainMenu', alias: 'main' }
            - { name: 'knp_menu.menu_builder', method: 'createSecondaryMenu', alias: 'secondary' }

    #Uses Cases
    Solean\CleanProspecter\UseCase\UseCasesFacade: ~
    Solean\CleanProspecter\UseCase\Login\LoginImpl:
        lazy:  true
        tags: ['use_case']
        arguments:
            - '@App\Gateway\Entity\UserRepositoryAdapter'
    Solean\CleanProspecter\UseCase\RefreshUser\RefreshUserImpl:
        lazy:  true
        tags: ['use_case']
        arguments:
            - '@App\Gateway\Entity\UserRepositoryAdapter'
    Solean\CleanProspecter\UseCase\CreateOrganization\CreateOrganizationImpl:
        lazy:  true
        tags: ['use_case']
        arguments:
            - '@App\Gateway\Entity\OrganizationRepositoryAdapter'
    Solean\CleanProspecter\UseCase\GetOrganization\GetOrganizationImpl:
        lazy:  true
        tags: ['use_case']
        arguments:
            - '@App\Gateway\Entity\OrganizationRepositoryAdapter'
    #Database Gateway
    App\Gateway\Entity\UserRepositoryAdapter:
        lazy:  true
        arguments:
            - '@doctrine.orm.entity_manager'
            - 'Solean\CleanProspecter\Entity\User'
    App\Gateway\Entity\OrganizationRepositoryAdapter:
        lazy:  true
        arguments:
            - '@doctrine.orm.entity_manager'
            - 'Solean\CleanProspecter\Entity\Organization'
    #Request handler
    App\Service\RequestHandler: ~
    #Form command
    App\Service\RequestHandler\DefaultFormHandlingCommand:
        lazy:  true
        tags: [{name: 'form_cmd', id: 'default'}, {name: 'form_cmd2', id: 'default2'}]
        calls:
            - [setFormFactory, ['@form.factory']]
            - [setTwig, ['@twig']]
            - [setRouter, ['@router']]
            - [setUseCases, ['@Solean\CleanProspecter\UseCase\UseCasesFacade']]

